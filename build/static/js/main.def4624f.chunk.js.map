{"version":3,"sources":["utils/posIndex.js","utils/getListOfSquares.js","reducers/squaresReducer.js","components/board/OptionMarker.js","connection/serverUrl.js","connection/boardApi.js","components/notification/ApiFailure.js","reducers/notificationReducer.js","utils/getDefaultFontSize.js","reducers/boardSizeReducer.js","reducers/gameStateReducer.js","reducers/loggedinReducer.js","reducers/menuStateReducer.js","reducers/intervalReducer.js","store.js","components/notification/GameEnd.js","utils/board.js","components/board/Square.js","utils/squaresIntoElements.js","components/board/Board.js","components/board/BoardOptionsButton.js","components/board/BoardOptions.js","components/board/BoardFrame.js","utils/styles.js","connection/usersApi.js","utils/users.js","components/login/LoginForm.js","components/login/SignInForm.js","components/login/GuestForm.js","components/login/Login.js","components/menu/Option.js","components/menu/CreateOrJoin.js","components/menu/CreateGame.js","components/menu/SelectSide.js","connection/gamesApi.js","utils/games.js","components/menu/SelectGame.js","components/menu/Menu.js","components/notification/CloseButton.js","components/notification/NotificationBar.js","components/notification/Notification.js","components/LogOut.js","App.js","components/notification/PromotionOption.js","components/notification/PromotionNotification.js","connection/authenticate.js","utils/authenticate.js","index.js"],"names":["chars","posToListIndex","pos","Number","charAt","indexOf","listIndexToPos","index","getListOfSquares","listOfPieces","squares","i","push","type","image","moves","status","images","k","K","q","Q","p","P","n","N","r","R","b","B","x","X","forEach","initialState","list","active","reducer","state","action","data","pieces","options","map","s","includes","OptionMarker","className","style","borderRadius","height","width","serverUrl","window","location","origin","baseUrl","makeMove","from","to","axios","post","ApiFailure","res","statusText","notification","onClose","props","setNotification","body","document","querySelector","div","createElement","cssText","element","appendChild","em","offsetHeight","ch","offsetWidth","removeChild","getDefaultFontSize","getSize","optionsSize","windowHeight","innerHeight","windowWidth","innerWidth","boardSize","setGameState","createOrJoin","gameType","color","gameId","value","interval","clearInterval","combineReducers","gameState","loggedin","menuState","store","createStore","mapDispatchToProps","connect","text","display","alignItems","flexDirection","onClick","e","margin","isMyTurn","a","get","console","log","onError","response","dispatch","getBoard","api","waitForNextTurn","updateGameState","isEnd","yourTurn","setInterval","surrender","GameEnd","description","makePromotion","c","makeSquareActive","makeSquareInactive","boxSizing","backgroundImage","undefined","backgroundSize","length","justifyContent","squaresIntoElements","concat","slice","key","flexWrap","BoardOptionsButton","clickHandler","marginTop","paddingLeft","paddingRight","overflow","marginLeft","formStyle","minHeight","maxHeight","minWidth","padding","inputStyle","flexGrow","divStyle","buttonStyle","signIn","name","password","logIn","logInGuest","logOut","LoginForm","onSubmit","preventDefault","target","loginName","loginPassword","htmlFor","id","SignInForm","signInName","signInPassword","GuestForm","Option","changeHandler","isDefault","title","defaultChecked","onChange","setMenuStateCreateOrJoin","setMenuStateGameType","setMenuStateColor","createGame","joinGame","put","getOnGoingGames","setMenuStateGameId","useState","games","setGames","useEffect","g","filter","white","black","CloseButton","NotificationBar","closeHandler","position","top","left","backgroundColor","maxWidth","App","selectImage","yourColor","PromotionNotification","authenticate","sendReq","ReactDOM","render","getElementById","onresize","subscribe","getState","some","toLowerCase"],"mappings":"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","file":"static/js/main.def4624f.chunk.js","sourcesContent":["const chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n\r\nconst posToListIndex = pos => \r\n    (Number(pos.charAt(1)) - 1) * 8 + chars.indexOf(pos.charAt(0));\r\n\r\n//const listIndexToPos = index => chars[(index - index % 8) / 8] + (index + 1) % 8;\r\nconst listIndexToPos = index => chars[index % 8] + ((index - index % 8) / 8 + 1);\r\n\r\nexport {\r\n    posToListIndex,\r\n    listIndexToPos\r\n};","import {posToListIndex} from './posIndex';\r\n\r\nconst getListOfSquares = listOfPieces => {\r\n    const squares = [];\r\n    for(let i = 0; i < 64; i++){\r\n        squares.push({\r\n            type: null,\r\n            image: null,\r\n            moves: [],\r\n            status: null\r\n        });\r\n    }\r\n    const images = {\r\n        k: 'bKingHd.png',\r\n        K: 'wKingHd.png',\r\n        q: 'bQueenHd.png',\r\n        Q: 'wQueenHd.png',\r\n        p: 'bPawnHd.png',\r\n        P: 'wPawnHd.png',\r\n        n: 'bKnightHd.png',\r\n        N: 'wKnightHd.png',\r\n        r: 'bRookHd.png',\r\n        R: 'wRookHd.png',\r\n        b: 'bBishopHd.png',\r\n        B: 'wBishopHd.png',\r\n        x: 'bPawnHd.png',\r\n        X: 'wPawnHd.png',\r\n    };\r\n\r\n    listOfPieces.forEach(p => {\r\n        squares[posToListIndex(p.pos)] = {\r\n            type: p.type,\r\n            moves: p.moves,\r\n            image: images[p.type],\r\n            status: null\r\n        };\r\n    });\r\n\r\n    return squares;\r\n}\r\n\r\nexport default getListOfSquares;","import getListOfSquares from './../utils/getListOfSquares';\r\nimport {posToListIndex, listIndexToPos} from './../utils/posIndex';\r\n\r\nconst initialState = {\r\n    list: getListOfSquares([]),\r\n    active: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_GAME_STATE':\r\n            return {\r\n                active: null,\r\n                list: action.data ? getListOfSquares(action.data.pieces) : initialState.list\r\n            };\r\n        case 'MAKE_SQUARE_ACTIVE':\r\n            const index = posToListIndex(action.pos);\r\n            const options = state.list[index].moves;\r\n            return {\r\n                active: action.pos,\r\n                list: state.list.map((s, i) => {\r\n                    return {\r\n                        ...s,\r\n                        status: i === index ? \r\n                            'active' : (options.includes(listIndexToPos(i)) ? 'option' : null)\r\n                    };\r\n                })\r\n            }\r\n        case 'MAKE_SQUARE_INACTIVE':\r\n            return {\r\n                active: null,\r\n                list: state.list.map(s => {\r\n                    return {\r\n                        ...s,\r\n                        status: null\r\n                    };\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\nconst makeSquareActive = pos => {\r\n    return {\r\n        type: 'MAKE_SQUARE_ACTIVE',\r\n        pos\r\n    };\r\n};\r\n\r\nconst makeSquareInactive = () => {\r\n    return {\r\n        type: 'MAKE_SQUARE_INACTIVE'\r\n    };\r\n};\r\n\r\nexport {\r\n    makeSquareActive,\r\n    makeSquareInactive\r\n};","import React from 'react';\r\n\r\nconst OptionMarker = () => {\r\n    return (\r\n        <div\r\n            className={'option-marker'}\r\n            style={{\r\n                borderRadius: '50%',\r\n                height: '25%',\r\n                width: '25%'\r\n            }}\r\n        >\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OptionMarker;","const serverUrl = window.location.origin;\r\n//const serverUrl = 'http://localhost:3001';\r\n\r\nexport default serverUrl;","import axios from 'axios';\r\nimport serverUrl from './serverUrl';\r\n\r\nconst baseUrl = serverUrl + '/api/board';\r\n\r\n\r\nconst getTurn = () => axios.get(baseUrl + '?turnOnly=true');\r\n\r\nconst getBoard = () => axios.get(baseUrl + '?turnOnly=false');\r\n\r\nconst makeMove = (from, to) => axios.post(`${baseUrl}?command=${from}${to}`);\r\n\r\nconst surrender = () => axios.post(baseUrl + '?command=surrender');\r\n\r\nconst makePromotion = c => axios.post(`${baseUrl}?command=${c}`);\r\n\r\n\r\nexport {\r\n    getTurn,\r\n    getBoard,\r\n    makeMove,\r\n    surrender,\r\n    makePromotion\r\n};","import React from 'react';\r\n\r\nconst ApiFailure = ({res}) => {\r\n    return (\r\n        <>\r\n            <p>{`error: ${res.status} ${res.statusText}`}</p>\r\n            <pre>{res.data}</pre>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ApiFailure","const reducer = (state = null, action) => {\r\n    switch(action.type){\r\n        case 'SET_GAME_STATE':\r\n            return null;\r\n        case 'SET_NOTIFICATION':\r\n            return action.notification ? {\r\n                notification: action.notification, \r\n                onClose : action.onClose, \r\n                props: action.props\r\n            } : null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\nconst setNotification = (notification, onClose, props) => {\r\n    return {\r\n        type: 'SET_NOTIFICATION',\r\n        notification,\r\n        onClose,\r\n        props\r\n    };\r\n};\r\n\r\nexport {setNotification};","const body = document.querySelector('body');\r\n\r\nconst div = document.createElement('div');\r\ndiv.style.cssText = 'height: 1em; width: 1ch; box-sizing: border-box; visibility: hidden;';\r\n\r\nconst getDefaultFontSize = (element = body) => {\r\n    element.appendChild(div);\r\n    const em = div.offsetHeight;\r\n    const ch = div.offsetWidth;\r\n    element.removeChild(div);\r\n    return {em, ch};\r\n};\r\n\r\nexport default getDefaultFontSize;","import getDefaultFontSize from './../utils/getDefaultFontSize';\r\n\r\nconst {ch, em} = getDefaultFontSize();\r\nconst getSize = () => {\r\n    const optionsSize = 2 + 4 * em + ch;\r\n    const windowHeight = window.innerHeight - optionsSize;\r\n    const windowWidth = window.innerWidth;\r\n    const boardSize = windowHeight < windowWidth ? windowHeight : windowWidth;\r\n    return boardSize - boardSize % 8;\r\n};\r\nconst initialState = getSize();\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_BOARD_SIZE':\r\n            return getSize();\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer\r\n\r\nconst setBoardSize = () => {\r\n    return {\r\n        type: 'SET_BOARD_SIZE'\r\n    };\r\n};\r\n\r\nexport {setBoardSize};","const reducer = (state = null, action) => {\r\n    switch(action.type){\r\n        case 'SET_GAME_STATE':\r\n            return action.data ? {...action.data} : null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\nconst setGameState = data => {\r\n    return {\r\n        type: 'SET_GAME_STATE',\r\n        data\r\n    };\r\n};\r\n\r\nexport {setGameState};","const reducer = (state = false, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return true;\r\n        case 'LOGOUT':\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\nconst login = () => {\r\n    return {\r\n        type: 'LOGIN'\r\n    };\r\n};\r\n\r\nconst logOut = () => {\r\n    return {\r\n        type: 'LOGOUT'\r\n    };\r\n};\r\n\r\nexport {\r\n    login,\r\n    logOut\r\n};","const initialState = {\r\n    createOrJoin: 'create',\r\n    gameType: 'local',\r\n    color: 'white',\r\n    gameId: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_MENU_STATE_CREATE_OR_JOIN':\r\n            return {\r\n                ...initialState,\r\n                createOrJoin: action.value\r\n            };\r\n        case 'SET_MENU_STATE_GAME_TYPE':\r\n            return {\r\n                ...state,\r\n                gameType: action.value,\r\n                color: action.value === 'local' ? initialState.color : state.color\r\n            };\r\n        case 'SET_MENU_STATE_COLOR':\r\n            return {\r\n                ...state,\r\n                color: action.value\r\n            };\r\n        case 'SET_MENU_STATE_GAME_ID':\r\n            return {\r\n                ...state,\r\n                gameId: action.value || null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\nconst setMenuStateCreateOrJoin = value => {\r\n    return {\r\n        type: 'SET_MENU_STATE_CREATE_OR_JOIN',\r\n        value\r\n    };\r\n};\r\n\r\nconst setMenuStateGameType = value => {\r\n    return {\r\n        type: 'SET_MENU_STATE_GAME_TYPE',\r\n        value\r\n    };\r\n};\r\n\r\nconst setMenuStateColor = value => {\r\n    return {\r\n        type: 'SET_MENU_STATE_COLOR',\r\n        value\r\n    };\r\n};\r\n\r\nconst setMenuStateGameId = value => {\r\n    return {\r\n        type: 'SET_MENU_STATE_GAME_ID',\r\n        value\r\n    };\r\n};\r\n\r\nexport {\r\n    setMenuStateCreateOrJoin,\r\n    setMenuStateGameType,\r\n    setMenuStateColor,\r\n    setMenuStateGameId\r\n};","const reducer = (state = null, action) => {\r\n    switch(action.type){\r\n        case 'SET_API_INTERVAL':\r\n            return action.interval;\r\n        case 'CLEAR_API_INTERVAL':\r\n            if(state){\r\n                clearInterval(state);\r\n            }\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\nconst setApiInterval = interval => {\r\n    return {\r\n        type: 'SET_API_INTERVAL',\r\n        interval\r\n    };\r\n};\r\n\r\nconst clearApiInterval = () => {\r\n    return {\r\n        type: 'CLEAR_API_INTERVAL'\r\n    };\r\n};\r\n\r\nexport {\r\n    setApiInterval,\r\n    clearApiInterval\r\n}","import {createStore, combineReducers} from 'redux';\r\nimport boardSize from './reducers/boardSizeReducer';\r\nimport gameState from './reducers/gameStateReducer';\r\nimport squares from './reducers/squaresReducer';\r\nimport loggedin from './reducers/loggedinReducer';\r\nimport notification from './reducers/notificationReducer';\r\nimport menuState from './reducers/menuStateReducer';\r\nimport interval from './reducers/intervalReducer';\r\n\r\nconst reducer = combineReducers({\r\n    boardSize,\r\n    gameState,\r\n    squares,\r\n    loggedin,\r\n    notification,\r\n    menuState,\r\n    interval\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setGameState} from './../../reducers/gameStateReducer';\r\nimport {setNotification} from './../../reducers/notificationReducer';\r\n\r\nconst GameEnd = ({text, setGameState, setNotification}) => {\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            flexDirection: 'column'\r\n        }}>\r\n            <pre>{text}</pre>\r\n            <button\r\n                onClick={e => {\r\n                    setGameState(null);\r\n                    setNotification();\r\n                }}\r\n                style={{\r\n                    margin: '1ch',\r\n                    height: '3em'\r\n                }}\r\n            >\r\n                back to menu\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setGameState,\r\n    setNotification\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(GameEnd);","import * as api from './../connection/boardApi';\r\nimport ApiFailure from './../components/notification/ApiFailure';\r\nimport {setNotification} from './../reducers/notificationReducer';\r\nimport store from './../store';\r\nimport {setGameState} from './../reducers/gameStateReducer';\r\nimport GameEnd from './../components/notification/GameEnd';\r\nimport {setApiInterval, clearApiInterval} from './../reducers/intervalReducer';\r\n\r\nconst isMyTurn = async () => {\r\n    try{\r\n        const res = await api.getTurn();\r\n        return res.data;\r\n    }catch(e){\r\n        console.log(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst onError = e => {\r\n    console.log(e);\r\n    if(e && e.response){\r\n        store.dispatch(setNotification(ApiFailure, null, {res: e.response}));\r\n    }\r\n};\r\n\r\nconst getBoard = async () => {\r\n    try{\r\n        const res = await api.getBoard();\r\n        return res.data;\r\n    }catch(e){\r\n        //onError(e);\r\n        console.log(e)\r\n        return false;\r\n    }\r\n};\r\n\r\nconst makeMove = async (from, to) => {\r\n    try{\r\n        await api.makeMove(from, to);\r\n        waitForNextTurn();\r\n    }catch(e){\r\n        onError(e);\r\n    }\r\n};\r\n\r\nconst waitForNextTurn = async () => {\r\n    const {isEnd, yourTurn} = await updateGameState();\r\n    if(isEnd || yourTurn){\r\n        return;\r\n    }\r\n    store.dispatch(setApiInterval(setInterval(async () => {\r\n        const myTurn = await isMyTurn();\r\n        if(myTurn){\r\n            store.dispatch(clearApiInterval());\r\n            updateGameState();\r\n        }\r\n    }, 5000)));\r\n};\r\n\r\nconst surrender = async () => {\r\n    try{\r\n        store.dispatch(clearApiInterval());\r\n        await api.surrender();\r\n        updateGameState();\r\n    }catch(e){\r\n        onError(e);\r\n    }\r\n};\r\n\r\nconst updateGameState = async () => {\r\n    const data = await getBoard();\r\n    if(data){\r\n        store.dispatch(setGameState(data));\r\n        if(data.isEnd){\r\n            store.dispatch(setNotification(GameEnd, null, {text: data.description}));\r\n        }\r\n    }\r\n    return {isEnd: data.isEnd, yourTurn: data.yourTurn};\r\n};\r\n\r\nconst makePromotion = async to => {\r\n    try{\r\n        await api.makePromotion(to === 'knight' ? 'n' : to.charAt(0));\r\n        waitForNextTurn();\r\n    }catch(e){\r\n        onError(e);\r\n    }\r\n};\r\n\r\nexport {\r\n    isMyTurn,\r\n    getBoard,\r\n    makeMove,\r\n    surrender,\r\n    updateGameState,\r\n    makePromotion\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {makeSquareActive, makeSquareInactive} from '../../reducers/squaresReducer';\r\nimport OptionMarker from './OptionMarker';\r\nimport {makeMove} from './../../utils/board';\r\n\r\nconst Square = props => {\r\n    const {image, moves, status, pos, squares} = props;\r\n\r\n    const clickHandler = e => {\r\n        switch(status){\r\n            case 'active':\r\n                props.makeSquareInactive();\r\n                break;\r\n            case 'option':\r\n                makeMove(squares.active, pos);\r\n                break;\r\n            default:\r\n                if(moves.length > 0){\r\n                    props.makeSquareActive(pos);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div \r\n            style={{\r\n                boxSizing: 'border-box',\r\n                height: '12.5%',\r\n                width: '12.5%',\r\n                backgroundImage: image ? `url(\"${image}\")` : undefined,\r\n                backgroundSize: 'cover'\r\n            }}\r\n            onClick={clickHandler}\r\n        >\r\n            <div \r\n                style={{\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    boxSizing: 'border-box'\r\n                }}\r\n                className={status === 'active' ? 'active-square' : (status === 'option' ? 'option-square' : null)}\r\n            >\r\n                {status === 'option' ? <OptionMarker /> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        squares: state.squares\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    makeSquareActive,\r\n    makeSquareInactive\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Square);","import React from 'react';\r\nimport Square from '../components/board/Square';\r\nimport {listIndexToPos} from './posIndex';\r\n\r\nconst squaresIntoElements = squares => {\r\n    squares = squares.map((s, i) => {return {...s, i}});\r\n    let s = [];\r\n    for(let i = 56; i >= 0; i -= 8){\r\n        s = s.concat(squares.slice(i, i + 8));\r\n    }\r\n    return s.map((e) => {\r\n        const pos = listIndexToPos(e.i);\r\n        return <Square key={pos} image={e.image} moves={e.moves} pos={pos} status={e.status}/>\r\n    });\r\n};\r\n\r\nexport default squaresIntoElements;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport squaresIntoElements from '../../utils/squaresIntoElements';\r\n\r\nconst Board = ({boardSize, gameState, squares}) => {\r\n    if(gameState === null){\r\n        return null;\r\n    }\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            height: boardSize + 'px',\r\n            width: boardSize + 'px',\r\n            boxSizing: 'border-box',\r\n            backgroundImage: 'url(\"simple-board.png\")',\r\n            backgroundSize: 'cover'\r\n        }}>{\r\n            squaresIntoElements(squares.list)\r\n        }</div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boardSize: state.boardSize,\r\n        gameState: state.gameState,\r\n        squares: state.squares\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Board);","import React from 'react';\r\n\r\nconst BoardOptionsButton = ({style = {}, text, clickHandler}) => {\r\n    return (\r\n        <button\r\n            style={{\r\n                height: '3em',\r\n                ...style\r\n            }}\r\n            onClick={clickHandler}\r\n            className={'board-options-button'}\r\n        >\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default BoardOptionsButton;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {surrender} from './../../utils/board';\r\nimport BoardOptionsButton from './BoardOptionsButton';\r\nimport {setGameState} from './../../reducers/gameStateReducer';\r\n\r\nconst BoardOptions = ({gameState, boardSize, setGameState}) => {\r\n    return (\r\n        <div \r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginTop: '1ch',\r\n                width: boardSize + 'px',\r\n                height: '4em',\r\n                paddingLeft: '1ch',\r\n                paddingRight: '1ch',\r\n                boxSizing: 'border-box'\r\n            }}\r\n            className={'board-options'}\r\n        >\r\n            <div style={{overflow: 'auto'}}>{gameState.description}</div>\r\n            {gameState.isEnd ? \r\n                <BoardOptionsButton \r\n                    style={{marginLeft: '1ch'}}\r\n                    text={'back to menu'}\r\n                    clickHandler={() => setGameState(null)}\r\n                />\r\n                :\r\n                <BoardOptionsButton \r\n                    style={{marginLeft: '1ch'}}\r\n                    text={'surrender'}\r\n                    clickHandler={() => surrender()}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        gameState: state.gameState,\r\n        boardSize: state.boardSize\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setGameState\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BoardOptions);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Board from './Board';\r\nimport BoardOptions from './BoardOptions';\r\n\r\nconst BoardFrame = ({gameState}) => {\r\n    if(gameState === null){\r\n        return null;\r\n    }\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n        }}>\r\n            <Board />\r\n            <BoardOptions />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        gameState: state.gameState,\r\n        boardSize: state.boardSize\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(BoardFrame);","const formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '20%',\r\n    minHeight: '38em',\r\n    maxHeight: '100vh',\r\n    minWidth: '30ch',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    padding: '2em',\r\n    margin: '1em'\r\n};\r\n\r\nconst inputStyle = {\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    flexGrow: '1'\r\n};\r\n\r\nconst divStyle = {\r\n    height: '1.7em',\r\n    display: 'flex'\r\n};\r\n\r\nconst buttonStyle = {\r\n    height: '3em',\r\n    width: '33%',\r\n    margin: '1em'\r\n};\r\n\r\nexport {\r\n    formStyle,\r\n    inputStyle,\r\n    divStyle,\r\n    buttonStyle\r\n};","import axios from 'axios';\r\nimport serverUrl from './serverUrl';\r\n\r\nconst baseUrl = serverUrl + '/api/users';\r\n\r\n\r\nconst signIn = (name, password) => axios.post(`${baseUrl}?action=create&name=${name}&password=${password}`);\r\n\r\nconst logIn = (name, password) => axios.post(`${baseUrl}?action=login&name=${name}&password=${password}`);\r\n\r\nconst logInGuest = () => axios.post(baseUrl + '?action=guest');\r\n\r\nconst logOut = () => axios.post(baseUrl + '?action=logout');\r\n\r\n\r\nexport {\r\n    signIn,\r\n    logIn,\r\n    logInGuest,\r\n    logOut\r\n};","import * as api from './../connection/usersApi';\r\nimport store from './../store';\r\nimport {login, logOut as logO} from './../reducers/loggedinReducer';\r\nimport {setNotification} from './../reducers/notificationReducer';\r\nimport ApiFailure from '../components/notification/ApiFailure';\r\nimport {setGameState} from '../reducers/gameStateReducer';\r\nimport {clearApiInterval} from '../reducers/intervalReducer';\r\nimport {updateGameState} from './board';\r\n\r\nconst onError = e => {\r\n    console.log(e);\r\n    if(e && e.response){\r\n        store.dispatch(setNotification(ApiFailure, null, {res: e.response}));\r\n    }\r\n};\r\n\r\nconst signIn = async (name, password) => {\r\n    try{\r\n        await api.signIn(name, password);\r\n        store.dispatch(login());\r\n    }catch(e){\r\n        onError(e);\r\n    }\r\n};\r\n\r\nconst logIn = async (name, password) => {\r\n    try{\r\n        await api.logIn(name, password);\r\n        store.dispatch(login());\r\n        updateGameState();\r\n    }catch(e){\r\n        onError(e);\r\n    }\r\n};\r\n\r\nconst logInGuest = async () => {\r\n    try{\r\n        await api.logInGuest();\r\n        store.dispatch(login());\r\n    }catch(e){\r\n        onError(e);\r\n    }\r\n};\r\n\r\nconst logOut = async () => {\r\n    try{\r\n        await api.logOut();\r\n        store.dispatch(logO());\r\n        store.dispatch(setGameState(null));\r\n        store.dispatch(clearApiInterval());\r\n    }catch(e){\r\n        onError(e);\r\n    }\r\n};\r\n\r\nexport {\r\n    signIn,\r\n    logIn,\r\n    logInGuest,\r\n    logOut\r\n};","import React from 'react';\r\nimport {formStyle, inputStyle, divStyle, buttonStyle} from '../../utils/styles';\r\nimport {logIn} from './../../utils/users';\r\n\r\nconst LoginForm = () => {\r\n    return (\r\n        <form\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n                const name = e.target.loginName.value;\r\n                const password = e.target.loginPassword.value;\r\n                logIn(name, password);\r\n            }}\r\n            style={formStyle}\r\n        >\r\n            <h1>Log in</h1>\r\n            <div className={'form-div'} style={divStyle}>\r\n                <label htmlFor='loginName'>name:</label>\r\n                <input id='loginName' type='text' name='loginName' style={inputStyle}></input>\r\n            </div>\r\n            <div className={'form-div'} style={divStyle}>\r\n                <label htmlFor='loginPassword'>password:</label>\r\n                <input id ='loginPassword' type='password' name='loginPassword' style={inputStyle}></input>\r\n            </div>\r\n            <button type='submit' style={buttonStyle}>log in</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport {formStyle, inputStyle, divStyle, buttonStyle} from '../../utils/styles';\r\nimport {signIn} from './../../utils/users';\r\n\r\nconst SignInForm = () => {\r\n    return (\r\n        <form\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n                const name = e.target.signInName.value;\r\n                const password = e.target.signInPassword.value;\r\n                signIn(name, password);\r\n            }}\r\n            style={formStyle}\r\n        >\r\n            <h1>Sign up</h1>\r\n            <div className={'form-div'} style={divStyle}>\r\n                <label htmlFor='signInName'>name:</label>\r\n                <input id='signInName' type='text' name='signInName' style={inputStyle}></input>\r\n            </div>\r\n            <div className={'form-div'} style={divStyle}>\r\n                <label htmlFor='signInPassword'>password:</label>\r\n                <input id ='signInPassword' type='password' name='signInPassword' style={inputStyle}></input>\r\n            </div>\r\n            <button type='submit' style={buttonStyle}>sign up</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SignInForm;","import React from 'react';\r\nimport {formStyle, buttonStyle} from '../../utils/styles';\r\nimport {logInGuest} from './../../utils/users';\r\n\r\nconst GuestForm = () => {\r\n    return (\r\n        <form\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n                logInGuest();\r\n            }}\r\n            style={formStyle}\r\n        >\r\n            <h1>Log in as guest</h1>\r\n            <button type='submit' style={buttonStyle}>log in</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default GuestForm;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport LoginForm from './LoginForm';\r\nimport SignInForm from './SignInForm';\r\nimport GuestForm from './GuestForm';\r\n\r\nconst Login = ({gameState, loggedin}) => {\r\n    if(gameState !== null || loggedin){\r\n        return null;\r\n    }\r\n    return (\r\n        <div style={{\r\n            height: '100%',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-evenly',\r\n            alignItems: 'center'\r\n        }}>\r\n            <LoginForm />\r\n            <SignInForm />\r\n            <GuestForm />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        gameState: state.gameState,\r\n        loggedin: state.loggedin\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Login);","import React from 'react';\r\n\r\nconst Option = ({name, value, changeHandler, isDefault, title}) => {\r\n    return (\r\n        <div title={title}>\r\n            <input \r\n                type='radio' \r\n                name={name} \r\n                value={value} \r\n                id={value} \r\n                defaultChecked={isDefault}\r\n                onChange={changeHandler}\r\n            >\r\n            </input>\r\n            <label htmlFor={value}>{value}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Option;","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {setMenuStateCreateOrJoin} from './../../reducers/menuStateReducer';\r\nimport Option from './Option';\r\n\r\nconst CreateOrJoin = ({setMenuStateCreateOrJoin}) => {\r\n    const changeHandler = e => setMenuStateCreateOrJoin(e.target.value);\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            marginTop: '1em',\r\n        }}>\r\n            <Option name={'create-or-join'} value={'create'} changeHandler={changeHandler} isDefault={true}/>\r\n            <Option name={'create-or-join'} value={'join'} changeHandler={changeHandler}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setMenuStateCreateOrJoin\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(CreateOrJoin);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setMenuStateGameType} from './../../reducers/menuStateReducer';\r\nimport Option from './Option';\r\n\r\nconst CreateGame = ({setMenuStateGameType}) => {\r\n    const changeHandler = e => setMenuStateGameType(e.target.value);\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            marginTop: '1em',\r\n        }}>\r\n            <Option \r\n                name={'game-type'} \r\n                value={'local'} \r\n                changeHandler={changeHandler} \r\n                isDefault={true}\r\n                title={'both sides will be played on this computer'}\r\n            />\r\n            <Option \r\n                name={'game-type'} \r\n                value={'bot'} \r\n                changeHandler={changeHandler}\r\n                title={'play against a bot'}\r\n            />\r\n            <Option \r\n                name={'game-type'} \r\n                value={'multiplayer'} \r\n                changeHandler={changeHandler}\r\n                title={'play against another player over the internet'}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setMenuStateGameType\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(CreateGame);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setMenuStateColor} from './../../reducers/menuStateReducer';\r\nimport Option from './Option';\r\n\r\nconst SelectSide = ({setMenuStateColor}) => {\r\n    const changeHandler = e => setMenuStateColor(e.target.value);\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            marginTop: '1em'\r\n        }}>\r\n            <Option name={'select-side'} value={'white'} changeHandler={changeHandler} isDefault={true}/>\r\n            <Option name={'select-side'} value={'black'} changeHandler={changeHandler}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setMenuStateColor\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(SelectSide);","import axios from 'axios';\r\nimport serverUrl from './serverUrl';\r\n\r\nconst baseUrl = serverUrl + '/api/games';\r\n\r\n\r\nconst getOnGoingGames = () => axios.get(baseUrl);\r\n\r\nconst createGame = (type, color) => axios.post(`${baseUrl}?type=${type}&color=${color}`);\r\n\r\nconst joinGame = id => axios.put(`${baseUrl}?game=${id}`);\r\n\r\n\r\nexport {\r\n    getOnGoingGames,\r\n    createGame,\r\n    joinGame\r\n};","import * as api from './../connection/gamesApi';\r\nimport {setNotification} from './../reducers/notificationReducer';\r\nimport ApiFailure from './../components/notification/ApiFailure';\r\nimport store from './../store';\r\nimport {updateGameState} from './board';\r\n\r\nconst onError = e => {\r\n    console.log(e);\r\n    if(e && e.response){\r\n        store.dispatch(setNotification(ApiFailure, null, {res: e.response}));\r\n    }\r\n};\r\n\r\nconst getOnGoingGames = async () => {\r\n    try{\r\n        const res = await api.getOnGoingGames();\r\n        return res.data;\r\n    }catch(e){\r\n        console.log(e);\r\n        return [];\r\n    }\r\n};\r\n\r\nconst createGame = async (type, color) => {\r\n    try{\r\n        await api.createGame(type, color);\r\n        updateGameState();\r\n    }catch(e){\r\n        onError(e);\r\n    }\r\n};\r\n\r\nconst joinGame = async (id) => {\r\n    try{\r\n        await api.joinGame(id);\r\n        updateGameState();\r\n    }catch(e){\r\n        onError(e);\r\n    }\r\n};\r\n\r\nexport {\r\n    getOnGoingGames,\r\n    createGame,\r\n    joinGame\r\n};","import React, {useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getOnGoingGames} from './../../utils/games';\r\nimport {setMenuStateGameId} from './../../reducers/menuStateReducer';\r\n\r\nconst SelectGame = ({setMenuStateGameId}) => {\r\n    const [games, setGames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const g = await getOnGoingGames();\r\n            setGames(g);\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            marginTop: '1em'\r\n        }}>\r\n            <select \r\n                name='games' \r\n                id='select-game'\r\n                style={{\r\n                    height: '2.5em'\r\n                }}\r\n                onChange={e => setMenuStateGameId(e.target.value)}\r\n            >\r\n                <option value={''}>select game</option>\r\n                {\r\n                    games\r\n                    .filter(g => g.white === null)\r\n                    .map(g => <option key={g.id} value={g.id}>{`${g.black} playing as black`}</option>)\r\n                    .concat(\r\n                        games\r\n                        .filter(g => g.black === null)\r\n                        .map(g => <option key={g.id} value={g.id}>{`${g.white} playing as white`}</option>)\r\n                    )\r\n                }\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setMenuStateGameId\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(SelectGame);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {formStyle, buttonStyle} from './../../utils/styles';\r\nimport CreateOrJoin from './CreateOrJoin'\r\nimport CreateGame from './CreateGame';\r\nimport SelectSide from './SelectSide';\r\nimport SelectGame from './SelectGame';\r\nimport {createGame, joinGame} from './../../utils/games';\r\n\r\nconst Menu = ({gameState, loggedin, menuState}) => {\r\n    if(gameState !== null || !loggedin){\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={async e => {\r\n                    e.preventDefault();\r\n                    menuState.createOrJoin === 'create' ? \r\n                        createGame(menuState.gameType, menuState.color) \r\n                        :\r\n                        joinGame(menuState.gameId);\r\n                }}\r\n                style={{\r\n                    ...formStyle,\r\n                    justifyContent: 'space-between',\r\n                }}\r\n            >\r\n                <div style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'column'\r\n                }}>\r\n                    <h1>Game menu</h1>\r\n                    <CreateOrJoin />\r\n                    {menuState.createOrJoin === 'create' ? <CreateGame /> : <SelectGame />}\r\n                    {menuState.gameType !== 'local' ? <SelectSide /> : null}\r\n                </div>\r\n                <button type='submit' style={buttonStyle}>Go!</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        gameState: state.gameState,\r\n        loggedin: state.loggedin,\r\n        menuState: state.menuState\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Menu);","import React from 'react';\r\n\r\nconst CloseButton = ({clickHandler}) => {\r\n    return (\r\n        <button\r\n            className={'close-button'}\r\n            style={{\r\n                height: '2em',\r\n                width: '2em',\r\n                boxSizing: 'border-box'\r\n            }}\r\n            onClick={clickHandler}\r\n        >\r\n            X\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default CloseButton;","import React from 'react';\r\nimport CloseButton from './CloseButton';\r\n\r\nconst NotificationBar = ({closeHandler}) => {\r\n    return (\r\n        <div\r\n            className={'notification-bar'}\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'flex-end'\r\n            }}\r\n        >\r\n            <CloseButton clickHandler={closeHandler}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotificationBar;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport NotificationBar from './NotificationBar';\r\nimport {setNotification} from './../../reducers/notificationReducer';\r\n\r\nconst Notification = ({notification, setNotification}) => {\r\n    if(notification === null){\r\n        return null;\r\n    }\r\n    return (\r\n        <div style={{\r\n            position: 'fixed',\r\n            top: '0px',\r\n            left: '0px',\r\n            height: '100vh',\r\n            width: '100vw',\r\n            backgroundColor: 'rgba(127, 127, 127, 0.5)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <div \r\n                style={{\r\n                    maxHeight: '100vh',\r\n                    maxWidth: '100vw',\r\n                    minWidth: '25ch',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'stretch'\r\n                }}\r\n                className={'notification'}\r\n            >\r\n                <NotificationBar closeHandler={() => {\r\n                    setNotification();\r\n                    if(typeof notification.onClose === 'function'){\r\n                        notification.onClose();\r\n                    }\r\n                }}/>\r\n                <div style={{\r\n                    overflow: 'auto'\r\n                }}>\r\n                    <notification.notification {...notification.props}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        notification: state.notification\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setNotification\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Notification);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logOut} from './../utils/users';\r\n\r\nconst LogOut = ({loggedin}) => {\r\n    if(!loggedin){\r\n        return null;\r\n    }\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            position: 'fixed',\r\n            top: '0px',\r\n            left: '0px',\r\n            width: '100vw'\r\n        }}>\r\n            <button \r\n                style={{\r\n                    borderRadius: '50%',\r\n                    margin: '2ch',\r\n                    height: '3em',\r\n                    width: '3em'\r\n                }}\r\n                className={'log-out-button'}\r\n                title={'log out'}\r\n                onClick={logOut}\r\n            >\r\n                {'<'}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedin: state.loggedin\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(LogOut);","import React from 'react';\r\nimport BoardFrame from './components/board/BoardFrame';\r\nimport Login from './components/login/Login';\r\nimport Menu from './components/menu/Menu';\r\nimport Notification from './components/notification/Notification';\r\nimport LogOut from './components/LogOut';\r\n\r\nfunction App() {\r\n    return (\r\n        <div style={{\r\n            minHeight: '100vh',\r\n            minWidth: '100vw',\r\n            backgroundColor: 'black',\r\n            backgroundImage: 'url(\"42mswQ0-matrix-wallpaper-hd.jpg\")',\r\n            backgroundSize: 'cover'\r\n        }}>\r\n            <div style={{\r\n                minWidth: '100vw',\r\n                minHeight: '100vh',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}>\r\n                <Login />\r\n                <Menu />\r\n                <BoardFrame />\r\n                <LogOut />\r\n                <Notification />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {makePromotion} from './../../utils/board';\r\n\r\nconst selectImage = (type, color) => {\r\n    return color.charAt(0) + (() => {\r\n        switch(type){\r\n            case 'bishop':\r\n                return 'BishopHd.png';\r\n            case 'rook':\r\n                return 'RookHd.png';\r\n            case 'knight':\r\n                return 'KnightHd.png';\r\n            default:\r\n                return 'QueenHd.png';\r\n        }\r\n    })();\r\n};\r\n\r\nconst PromotionOption = ({type, boardSize, gameState}) => {\r\n    return (\r\n        <div \r\n            style={{\r\n                height: boardSize / 8 + 'px',\r\n                width: boardSize / 8 + 'px',\r\n                margin: '1ch',\r\n                backgroundImage: `url(\"${selectImage(type, gameState.yourColor)}\")`,\r\n                backgroundSize: 'cover',\r\n                boxSizing: 'border-box'\r\n            }}\r\n            title={type}\r\n            onClick={() => makePromotion(type)}\r\n            className={'promotion-option'}\r\n        >\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boardSize: state.boardSize,\r\n        gameState: state.gameState\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(PromotionOption);","import React from 'react';\r\nimport PromotionOption from './PromotionOption';\r\n\r\nconst PromotionNotification = () => {\r\n    return (\r\n        <>\r\n            <p style={{marginLeft: '1ch'}}>promoto to:</p>\r\n            <div style={{\r\n                display: 'flex'\r\n            }}>\r\n                <PromotionOption type={'queen'}/>\r\n                <PromotionOption type={'bishop'}/>\r\n                <PromotionOption type={'rook'}/>\r\n                <PromotionOption type={'knight'}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PromotionNotification;","import axios from 'axios';\r\nimport serverUrl from './serverUrl';\r\n\r\nconst authenticate = () => axios.get(serverUrl + '/authenticate');\r\n\r\nexport default authenticate;","import sendReq from './../connection/authenticate';\r\nimport {login} from './../reducers/loggedinReducer';\r\nimport store from './../store';\r\nimport {updateGameState} from './board';\r\n\r\nconst authenticate = async () => {\r\n    try{\r\n        await sendReq();\r\n        store.dispatch(login());\r\n        updateGameState();\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nexport default authenticate;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store';\r\nimport {setBoardSize} from './reducers/boardSizeReducer';\r\nimport {setNotification} from './reducers/notificationReducer';\r\nimport PromotionNotification from './components/notification/PromotionNotification';\r\nimport authenticate from './utils/authenticate';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\nwindow.onresize = e => store.dispatch(setBoardSize());\r\n\r\nstore.subscribe(() => {\r\n    const state = store.getState();\r\n    if(\r\n        state.notification === null && \r\n        state.gameState !== null &&\r\n        state.gameState.pieces.some(p => p.type.toLowerCase() === 'x')\r\n    ){\r\n        store.dispatch(setNotification(PromotionNotification));\r\n    }\r\n});\r\n\r\nauthenticate();\r\n\r\nconsole.log('initial state:', store.getState());\r\nstore.subscribe(() => console.log('state:', store.getState()));\r\n"],"sourceRoot":""}